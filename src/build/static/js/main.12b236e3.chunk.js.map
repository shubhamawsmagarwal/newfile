{"version":3,"sources":["config.js","User.js","App.js","serviceWorker.js","index.js","Home.js"],"names":["ABI","User","className","this","props","account","to","images","map","image","key","src","hash","alt","purchased","owner","window","web3","utils","fromWei","price","toString","Component","App","state","imageCount","userImageCount","userImages","loading","imageUpload","bind","purchaseImage","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","currentAccount","setState","file","Contract","methods","call","i","users","index","send","from","then","r","location","reload","id","value","exact","path","render","Home","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","ipfs","require","ipfsClient","host","port","protocol","captureFile","event","preventDefault","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","onSubmit","parseFloat","imagePrice","toWei","add","type","ref","input","placeholder","required","onChange","name","onClick"],"mappings":"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","file":"static/js/main.12b236e3.chunk.js","sourcesContent":["export const ADDRESS = '0x149d1eba3b71f073dc04d8e8d0e15182894d7514';\n\nexport const ABI = [\n    \n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"users\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"images\",\n      \"outputs\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"hash\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"price\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"purchased\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"imageCount\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"userImageCount\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"hash\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"price\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"purchased\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ImageUploaded\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"hash\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"price\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"purchased\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ImagePurchased\",\n      \"type\": \"event\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_imageHash\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"_price\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"imageUpload\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"purchaseImage\",\n      \"outputs\": [],\n      \"payable\": true,\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    }\n  \n  ]","import React,{ Component } from 'react';\nimport { Link } from 'react-router-dom';\nclass User extends Component{\n    render(){\n        return(\n            <div className=\"text-center\">\n            <p className=\"font-weight-bold text-secondary\">Account:  {this.props.account}</p>\n            <Link to=\"/\" className=\"btn btn-lg btn-info\">Home</Link>\n            {this.props.images.map((image, key) => {\n                  return(\n                  <div  className=\"m-4 text-center w-50 p-5\" key={key}>\n                    <div className=\"img-thumbnail\">\n                      <img className=\"w-50 p-3\" src={`https://ipfs.infura.io/ipfs/${image.hash}`} alt=\"description\" />\n                      {(!image.purchased)\n                      ?<p className=\"font-weight-bold text-secondary\">{window.web3.utils.fromWei(image.price.toString(), 'Ether')} Eth</p>\n                      :(image.owner===this.props.account)\n                      ?<p className=\"font-weight-bold text-secondary\">Bought</p>\n                      :<p className=\"font-weight-bold text-secondary\">Sold</p>\n                      }\n                    </div>\n                  </div>\n                  );\n                })}\n            </div>\n        );\n    }\n}\nexport default User;","import React, { Component } from 'react';\nimport {BrowserRouter as Router , Route} from 'react-router-dom';\nimport Web3 from 'web3';\nimport './App.css';\nimport {ABI,ADDRESS } from './config';\nimport Home from './Home';\nimport User from './User';\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    const currentAccount=accounts[0];\n    this.setState({ account: currentAccount });\n    const file = new web3.eth.Contract(ABI,ADDRESS);\n    this.setState({ file});\n    const imageCount = await file.methods.imageCount().call();\n    this.setState({ imageCount });\n    for (var i = 1; i <= imageCount; i++) {\n      const image = await file.methods.images(i).call();\n      this.setState({\n        images: [...this.state.images,image]\n      });\n    }\n    const userImageCount=await file.methods.userImageCount(currentAccount).call();\n    this.setState({userImageCount});\n    for (i = 0; i <userImageCount; i++) {\n      const index = await file.methods.users(currentAccount,i).call();\n      const image=await file.methods.images(index).call();\n      this.setState({\n        userImages: [...this.state.userImages,image]\n      });\n    }\n    this.setState({ loading: false });\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      imageCount: 0,\n      userImageCount:0,\n      userImages:[],\n      images: [],\n      loading: true\n    };\n    this.imageUpload = this.imageUpload.bind(this);\n    this.purchaseImage = this.purchaseImage.bind(this);\n  }\n  imageUpload(hash,price) {\n    this.setState({ loading: true });\n    this.state.file.methods.imageUpload(hash, price).send({ from: this.state.account }).then((r) => {\n      window.location.reload(false);\n    });\n  }\n  purchaseImage(id, price) {\n    this.setState({ loading: true });\n    this.state.file.methods.purchaseImage(id).send({ from: this.state.account, value: price }).then((r) => {\n      window.location.reload(false);\n    });\n  }\n  render() {\n    if(this.state.loading)\n    return(<div className=\"text-center\">Loading...</div>);\n    return (\n    <Router><div>\n      <Route exact path=\"/\" render={(props)=>\n        <Home {...props} \n        images={this.state.images}\n        imageUpload={this.imageUpload}\n        purchaseImage={this.purchaseImage}\n        account={this.state.account}\n        />\n      }></Route>\n      <Route exact path=\"/user\" render={(props)=>\n        <User {...props} \n        account={this.state.account}\n        images={this.state.userImages}\n        />\n      }></Route>\n    </div></Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nconst ipfsClient = require('ipfs-http-client');\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }); // leaving out the arguments will default to these values\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buffer: null,\n      loading:false\n    };\n  }\n  captureFile = (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result)});\n      //console.log('buffer', this.state.buffer)\n    };\n  }\n  onSubmit = (event) => {\n    event.preventDefault();\n    const p=parseFloat(this.imagePrice.value);\n    if(p<0){\n      alert(\"can't be negative\");\n      return;\n    }\n    const price = window.web3.utils.toWei(this.imagePrice.value.toString(), 'Ether');\n    //console.log(\"Submitting file to ipfs...\")\n    this.setState({ loading:true });\n    ipfs.add(this.state.buffer, (error, result) => {\n      //console.log('Ipfs result', result);\n      if(error) {\n        console.error(error);\n        return;\n      }\n       this.props.imageUpload(result[0].hash,price);\n    });\n  }\n  render() {\n    if(this.state.loading)\n    return(<div className=\"text-center\">Loading...</div>);\n    return (\n      <div>\n        <div className=\"text-center\">\n            <p className=\"font-weight-bold text-secondary\">Account:  {this.props.account}</p>\n            <Link to=\"/user\" className=\"btn btn-lg btn-info\">Profile</Link>\n            <p>&nbsp;</p>\n            <h3>Add Image</h3>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  ref={(input) => { this.imagePrice = input }}\n                  placeholder=\"Image Price\"\n                  required />\n              </div>\n              <input type='file' onChange={this.captureFile} />\n              <button type=\"submit\" className=\"btn btn-success\">Add Image</button>\n            </form>\n            <p>&nbsp;</p>\n            <h2>Buy Image</h2>\n            { this.props.images.map((image, key) => {\n            if(image.purchased)\n              return(null);\n              return(\n              <div  className=\"m-3 text-center w-50 p-5\" key={key}>\n                <div className=\"img-thumbnail\">\n                  <img className=\"w-50 p-3\" src={`https://ipfs.infura.io/ipfs/${image.hash}`} alt=\"description\" />\n                  <p className=\"font-weight-bold text-secondary\">{window.web3.utils.fromWei(image.price.toString(), 'Ether')} Eth</p>\n                  <button\n                      name={image.id}\n                      value={image.price}\n                      className=\"btn btn-info\"\n                      onClick={(event) => {\n                        this.props.purchaseImage(event.target.name, event.target.value);\n                      }}\n                    >Buy</button>\n                </div>\n              </div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}